// generated by stringer -type Type; DO NOT EDIT

package lexer

import "fmt"

const _Type_name = "EOFErrorIdentFalseNumberTrueElseIfVarWhileBoolIntAssignMultiplyDividePlusMinusLessLessOrEqualGreaterGreaterOrEqualEqualNotEqualNotAndOrLeftParenRightParenLeftBraceRightBrace"

var _Type_index = [...]uint8{3, 8, 13, 18, 24, 28, 32, 34, 37, 42, 46, 49, 55, 63, 69, 73, 78, 82, 93, 100, 114, 119, 127, 130, 133, 135, 144, 154, 163, 173}

func (i Type) String() string {
	if i < 0 || i >= Type(len(_Type_index)) {
		return fmt.Sprintf("Type(%d)", i)
	}
	hi := _Type_index[i]
	lo := uint8(0)
	if i > 0 {
		lo = _Type_index[i-1]
	}
	return _Type_name[lo:hi]
}
